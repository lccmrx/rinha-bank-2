version: "3.8"

services:
  load-balancer:
    image: nginx:1.25.3-alpine3.18
    volumes:
      - ./load-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "50MB"

  api1: &api
    build:
      dockerfile: Dockerfile.api
    depends_on:
      db:
        condition: service_healthy
    # ports:
    #   - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "60MB"
  
  api2:
    <<: *api

  orchestrator:
    build:
      dockerfile: Dockerfile.orchestrator
    depends_on:
      db:
        condition: service_healthy
    environment:
      db_host: db
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "100MB"

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "60MB"

